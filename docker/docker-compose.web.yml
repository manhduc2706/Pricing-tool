services:
  # API Service
  pricing-tool-api:
    image: pricing-tool-api:latest
    container_name: pricing-tool-api
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      # Node.js Environment
      NODE_ENV: production
      PORT: 3000

      # API Configuration
      API_VERSION: v1
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 3000

      # MongoDB Configuration (connect to external container)
      MONGO_CONNECTION: mongodb://admin:admin123@pricing-tool-mongo:27017/pricing-tool?authSource=admin
      MONGO_RETRY_WRITES: 'true'
      MONGO_MAX_POOL_SIZE: 10
      MONGO_MIN_POOL_SIZE: 2
      MONGO_MAX_IDLE_TIME_MS: 30000
      MONGO_CONNECT_TIMEOUT_MS: 10000
      MONGO_SERVER_SELECTION_TIMEOUT_MS: 5000
      MONGO_SOCKET_TIMEOUT_MS: 45000

      # MinIO Configuration (connect to external container)
      MINIO_ENDPOINT: pricing-tool-minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: 'false'
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_REGION: us-east-1
      MINIO_BUCKET_PREFIX: pricing-tool
      MINIO_BUCKET_NAME: pricing-tool-files

      # Storage Configuration
      STORAGE_TYPE: minio
      STORAGE_PATH: ./storage
      MAX_FILE_SIZE: 100MB

      # File Upload Configuration
      MAX_IMAGE_FILE_SIZE: 10MB
      ALLOWED_IMAGE_FORMATS: jpg,jpeg,png,gif,webp

      # JWT Configuration
      JWT_SECRET: pricing-tool-jwt-secret-key-2024
      JWT_EXPIRES_IN: 7d

      # CORS Configuration
      CORS_ORIGIN: http://localhost:5173,http://localhost:1680

      # Logging Configuration
      LOG_LEVEL: info
      LOG_FILE: ./logs/app.log

      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100

      # Monitoring
      HEALTH_CHECK_INTERVAL: 30000
      METRICS_ENABLED: 'true'

      # External API Configuration
      EXTERNAL_API_TIMEOUT: 30000
      EXTERNAL_API_RETRY_ATTEMPTS: 3

      # Admin Configuration
      ADMIN_EMAIL: admin@pricing-tool.com
      ADMIN_PASSWORD: admin123
    networks:
      - pricing-tool-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/api/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./logs:/app/logs
      - ./storage:/app/storage

  # Web Service with Nginx
  pricing-tool-web:
    image: pricing-tool-web:latest
    container_name: pricing-tool-web
    restart: unless-stopped
    ports:
      - '80:80' # Web application port
    depends_on:
      - pricing-tool-api
    networks:
      - pricing-tool-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:80/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      # Mount custom nginx config if needed
      - ./nginx/web.conf:/etc/nginx/nginx.conf:ro
  
# External networks and services
networks:
  pricing-tool-network:
    external: true
# Note: MongoDB and MinIO containers should be started separately using docker-compose.env.yml
# Usage:
# 1. Start infrastructure: docker-compose -f docker/docker-compose.env.yml up -d
# 2. Start applications: docker-compose -f docker/docker-compose.web.yml up -d
